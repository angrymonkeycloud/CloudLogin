@namespace AngryMonkey.CloudLogin
@using AngryMonkey.CloudLogin.Interfaces
@inject ICloudLogin cloudLogin

<div class="account-section">
    <div class="section-header">
        <h3>Update User Information</h3>
        <p class="section-description">Manage your personal information</p>
    </div>
    
    <div class="form-container">
        <div class="form-group">
            <label for="firstName" class="form-label">First Name:</label>
            <input type="text" 
                   id="firstName" 
                   class="form-input" 
                   @bind="CurrentUser.FirstName" 
                   placeholder="Enter your first name" />
        </div>

        <div class="form-group">
            <label for="lastName" class="form-label">Last Name:</label>
            <input type="text" 
                   id="lastName" 
                   class="form-input" 
                   @bind="CurrentUser.LastName" 
                   placeholder="Enter your last name" />
        </div>

        <div class="form-group">
            <label for="displayName" class="form-label">Display Name:</label>
            <input type="text" 
                   id="displayName" 
                   class="form-input" 
                   @bind="CurrentUser.DisplayName" 
                   placeholder="Enter your display name" />
        </div>

     @*    <div class="form-group">
            <label for="dateOfBirth" class="form-label">Date of Birth:</label>
            <input type="date" 
                   id="dateOfBirth" 
                   class="form-input" 
                   @bind="CurrentUser.DateOfBirth" />
        </div> *@

        <div class="form-actions">
            <button class="btn btn-primary" @onclick="UpdateUserInfo" disabled="@_isUpdating">
                @if (_isUpdating)
                {
                    <span class="loading-spinner"></span>
                    <span>Updating...</span>
                }
                else
                {
                    <span>Update Information</span>
                }
            </button>
        </div>

        @if (!string.IsNullOrEmpty(_updateMessage))
        {
            <div class="@(_updateSuccess ? "alert-success" : "alert-error")">
                @_updateMessage
            </div>
        }
    </div>
</div>

@code {
    [Parameter] public required User CurrentUser { get; set; }

    private bool _isUpdating = false;
    private string _updateMessage = string.Empty;
    private bool _updateSuccess = false;

    /// <summary>
    /// Updates the user information through the CloudLogin service
    /// </summary>
    private async Task UpdateUserInfo()
    {
        if (_isUpdating) return;

        try
        {
            _isUpdating = true;
            _updateMessage = string.Empty;
            StateHasChanged();

            // Validate required fields
            if (string.IsNullOrWhiteSpace(CurrentUser.FirstName) || 
                string.IsNullOrWhiteSpace(CurrentUser.LastName) || 
                string.IsNullOrWhiteSpace(CurrentUser.DisplayName))
            {
                _updateMessage = "Please fill in all required fields.";
                _updateSuccess = false;
                return;
            }

            await cloudLogin.UpdateUser(CurrentUser);

            _updateMessage = "Your information has been updated successfully.";
            _updateSuccess = true;
        }
        catch (Exception ex)
        {
            _updateMessage = $"Failed to update information: {ex.Message}";
            _updateSuccess = false;
        }
        finally
        {
            _isUpdating = false;
            StateHasChanged();

            // Clear success message after 3 seconds
            if (_updateSuccess)
            {
                await Task.Delay(3000);
                _updateMessage = string.Empty;
                StateHasChanged();
            }
        }
    }
}
